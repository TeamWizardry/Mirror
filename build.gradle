buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:latest.release'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
}

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.jfrog.artifactory'

def maven_version = library_version
def snapshotBranch = System.getenv('SNAPSHOT_BRANCH')
if(snapshotBranch != null) {
    if(snapshotBranch.startsWith('refs/heads/'))
        snapshotBranch = snapshotBranch.substring('refs/heads/'.length())
    maven_version = snapshotBranch.replaceAll('[^.\\w-]', '-') + '-SNAPSHOT'
    logger.lifecycle('Using SNAPSHOT version `{}`', version)
}

// pass `-PmirrorVersion=foo` to set the version directly. Useful for publishing to the local maven repository
if(hasProperty('mirrorVersion')) {
    maven_version = mirrorVersion
}

group = 'dev.thecodewarrior.mirror'
archivesBaseName = 'mirror'
version = maven_version

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    api('org.jetbrains.kotlin:kotlin-stdlib')
    api('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    implementation('org.jetbrains.kotlin:kotlin-reflect')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.0')
    testImplementation('io.mockk:mockk:1.10.0')
}

kotlin {
    explicitApi = 'warning'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
        freeCompilerArgs += '-Xjvm-default=all'
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
        freeCompilerArgs += '-Xjvm-default=all'
    }
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.compilerArgs.add('-parameters')
}

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    options.compilerArgs.add('-parameters')
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar.dependsOn sourcesJar

publishing {
    publications {
        create('maven', MavenPublication) {
            groupId = 'dev.thecodewarrior.mirror'
            artifactId = 'mirror'
            version = project.version

            artifact sourcesJar
            from components.java

            pom {
                name = 'Mirror'
                description = 'A library that makes advanced Java reflection features viable for the non-expert to use'
                url = 'http://github.com/thecodewarrior/Mirror'
                licenses {
                    license {
                        name = 'BSD 2-Clause'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/thecodewarrior/Mirror.git'
                    developerConnection = 'scm:git:ssh://github.com/thecodewarrior/Mirror.git'
                    url = 'https://github.com/thecodewarrior/Mirror'
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['maven']
    pkg {
        repo = 'thecodewarrior'
        name = 'mirror'
        desc = project.description
        labels = ['java', 'reflection']
        licenses = ['BSD 2-Clause']

        websiteUrl = 'https://github.com/thecodewarrior/Mirror'
        githubRepo = 'thecodewarrior/Mirror'
        vcsUrl = 'https://github.com/thecodewarrior/Mirror.git'
        issueTrackerUrl = 'https://github.com/thecodewarrior/Mirror/issues'
    }
}

artifactory {
    setContextUrl 'https://oss.jfrog.org'
    publish {
        repository {
            repoKey = project.version.endsWith('-SNAPSHOT') ? 'oss-snapshot-local' : 'oss-release-local'
            username = System.getenv('BINTRAY_USER')
            password = System.getenv('BINTRAY_API_KEY')
            maven = true
        }
        defaults {
            publications 'maven'
        }
    }
    clientConfig.info.setBuildNumber(System.getenv('ARTIFACTORY_BUILD_NUMBER')) // no env = null = default value
}
